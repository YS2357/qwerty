# 문제 번호: 10844
# 문제 제목: 쉬운 계단 수
# 문제 설명:
#   - 계단 수란 인접한 자리의 숫자가 1 차이가 나는 수를 말합니다.
#   - 첫 자리는 0이 될 수 없으며, 숫자의 각 자리는 0~9입니다.
#   - N자리 계단 수의 개수를 구하고 그 값을 1,000,000,000으로 나눈 나머지를 출력하세요.

# 입력:
#   - 첫 번째 줄에 N이 주어집니다. (1 <= N <= 100)

# 출력:
#   - 길이가 N인 계단 수의 개수를 1,000,000,000으로 나눈 나머지를 출력합니다.

N = int(input())  # N은 계단 수의 자릿수 (1 <= N <= 100)

# DP 테이블을 만듭니다. dp[i][j]는 길이가 i인 계단 수 중 마지막 자리가 j인 경우의 수
dp = [[0] * 10 for _ in range(N + 1)]

# 길이가 1인 계단 수 초기화
# 길이가 1인 경우, 1~9까지는 계단 수가 될 수 있지만, 0은 불가능합니다.
for i in range(1, 10):
    dp[1][i] = 1  # 길이 1인 계단 수는 각 숫자가 하나씩 가능함 (1~9)

# 2자리부터 N자리까지 DP 계산
for i in range(2, N + 1):  # 2자리부터 N자리까지
    for j in range(10):  # 각 자리 숫자는 0부터 9까지 가능
        if j > 0:  # j가 0보다 크다면 j-1에서 j로 올 수 있음
            dp[i][j] += dp[i - 1][j - 1]
        if j < 9:  # j가 9보다 작다면 j+1에서 j로 올 수 있음
            dp[i][j] += dp[i - 1][j + 1]
        dp[i][j] %= 1000000000  # 계산 중에 값을 1,000,000,000으로 나눈 나머지를 저장

# 마지막 자리수가 0부터 9인 N자리 계단 수의 개수를 모두 합산합니다.
# 마지막 자리가 0도 포함되지만, 첫 자리가 0인 경우는 없음
result = sum(dp[N])  # dp[N][0]부터 dp[N][9]까지 모두 합산

# 결과를 1,000,000,000으로 나눈 나머지를 출력합니다.
print(result % 1000000000)

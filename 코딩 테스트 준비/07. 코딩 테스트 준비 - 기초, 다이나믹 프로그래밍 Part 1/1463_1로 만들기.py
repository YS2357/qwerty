# 백준 1463번 문제 - 1로 만들기
# 문제 설명:
# 주어진 숫자 N을 1로 만들기 위해 다음 세 가지 연산을 사용할 수 있다:
# 1. N을 3으로 나눌 수 있으면 나눈다.
# 2. N을 2로 나눌 수 있으면 나눈다.
# 3. 1을 뺀다.
# 이 연산들을 최소한으로 사용하여 N을 1로 만드는 횟수를 구하는 문제이다.

# 입력: 자연수 N (1 ≤ N ≤ 10^6)
# 출력: N을 1로 만드는 최소 연산 횟수


# N을 입력받음
N = int(input())

# dp 리스트 생성, 각 숫자를 1로 만들기 위한 최소 연산 횟수를 저장
dp = [0] * (N + 1)

# 2부터 최소 연산 횟수 계산
for i in range(2, N + 1):
    # 기본적으로 1을 뺀 경우
    dp[i] = dp[i - 1] + 1

    # 2로 나누어 떨어지면 최소값 갱신
    if i % 2 == 0:
        dp[i] = min(dp[i], dp[i // 2] + 1)

    # 3으로 나누어 떨어지면 최소값 갱신Q
    if i % 3 == 0:
        dp[i] = min(dp[i], dp[i // 3] + 1)
    
    # 시간복잡도 O(N) 

# 결과 출력
print(dp[N])
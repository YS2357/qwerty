# 백준 16194번 문제 - 카드 구매하기 2
# 문제 설명:
# 카드팩이 주어졌을 때, N장의 카드를 최소 비용으로 구매하는 방법을 구하는 문제.

# 입력: 자연수 N (1 ≤ N ≤ 1000), 카드팩 가격 리스트
# 출력: N장의 카드를 구매하는 데 필요한 최소 비용

# N을 입력받음
N = int(input())

# 카드팩 가격 리스트 (1-based index로 맞추기 위해 앞에 0을 추가)
prices = [0] + list(map(int, input().split()))

# dp 배열 생성: dp[i]는 i개의 카드를 구매하는 데 필요한 최소 비용을 저장
dp = [float('inf')] * (N + 1)

# dp[0]은 카드 0개를 사는 경우이므로 비용은 0
dp[0] = 0

# 1부터 N까지 각 카드 수에 대해 최소 비용 계산
for i in range(1, N + 1):
    for j in range(1, i + 1):
        dp[i] = min(dp[i], dp[i - j] + prices[j])

# 결과 출력: N개의 카드를 구매할 때의 최소 비용
print(dp[N])
